openapi: 3.1.0
info:
  title: Authentication Service API
  summary: Authentication service
  description: |
    This is an API for an authentication service using JWT and optional email 2FA.
  version: 0.0.1
  contact:
    name: Ibrahim Mbaziira
    url: https://auth.0xfrait.com/support
    email: code.ibra@gmail.com
  license:
    name: Apache2
    identifier: Apache-2.0

schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
servers:
  - url: "https://auth.0xfrait.com"
    description: Outh server
tags:
  - name: introduction
    description: |
      Authentication service

      ### Support

      Authentication service

      [Bug reports](https://github.com/code-sleuth/outh/issues) in the API are also welcome, as are pull requests to fix the issues.

      ### Contributing

      The source code for this API reference is hosted at https://github.com/code-sleuth/outh.

  - name: signup
    description: Endpoints for signing up.

  - name: login
    description: Endpoints for logging in.

  - name: verify-2fa
    description: Endpoints for verifying 2fa.

  - name: logout
    description: Endpoints for loging out.

  - name: verify-token
    description: Endpoints for verifying token.

  - name: default
    description: Base url.

x-tagGroups:
  - name: Overview
    tags:
      - introduction

  - name: Routes
    tags:
      - login
      - signup
      - verify-2fa
      - logout
      - verify-token
      - default

basePath: /
paths:
  /:
    get:
      security: []
      summary: Login/Sign-up UI
      description: This route serves the login/signup UI
      responses:
        "200":
          description: Login/Signup UI
          content:
            text/html:
              schema:
                type: string
                examples:
                  - "<html><body><h1>Login/Signup</h1></body></html>"
          tags:
            - default
  /signup:
    post:
      security: []
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                requires2FA:
                  type: boolean
                  description: Flag to enable two-factor authentication
      responses:
        "201":
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    examples:
                      - User created successfully!
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "409":
          description: Email already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "422":
          description: Unprocessable content
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
      tags:
        - signup

  /login:
    post:
      security: []
      summary: Authenticate user and return JWT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        "200":
          description: Login successful
          headers:
            Set-Cookie:
              schema:
                type: string
                examples:
                  - jwt=your_token; HttpOnly; SameSite=Lax; Secure; Path=/
        "206":
          description: Login requires 2FA
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  loginAttemptId:
                    type: string
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "422":
          description: Unprocessable content
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
      tags:
        - login

  /verify-2fa:
    post:
      security: []
      summary: Verify 2FA token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                loginAttemptId:
                  type: string
                2FACode:
                  type: string
      responses:
        "200":
          description: 2FA token verified successfully
          headers:
            Set-Cookie:
              schema:
                type: string
                examples:
                  - jwt=your_token; HttpOnly; SameSite=Lax; Secure; Path=/
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "422":
          description: Unprocessable content
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
      tags:
        - verify-2fa

  /logout:
    post:
      security: []
      summary: Logout user
      parameters:
        - in: cookie
          name: jwt
          schema:
            type: string
          required: true
          description: JWT token for authentication
      responses:
        "200":
          description: Logout successful
          headers:
            Set-Cookie:
              schema:
                type: string
                examples:
                  - jwt=; Expires=Thu, 01 Jan 1970 00:00:00 GMT; HttpOnly; SameSite=Lax; Secure; Path=/
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: JWT is not valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
      tags:
        - logout

  /verify-token:
    post:
      security: []
      summary: Verify JWT
      description: Verifies if a JWT is valid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        "200":
          description: Token is valid
        "401":
          description: JWT is not valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "422":
          description: Unprocessable content
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
      tags:
        - verify-token
